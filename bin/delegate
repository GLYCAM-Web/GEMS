#!/usr/bin/env python3
##  Use this file to:
##    * Run the GEMS Delegator as a standalone script.

################################################################################
##
##                         Preamble
##
##  These parts will be common to the scripts an can be copied in from a 
##  common location.
##
##  Please update the lines just below to match your script.
##
##  There must be a better way to do this, but Lachele doesn't know it.  
##  Feel free to improve upon it.
##
################################################################################

########  Please change these values as needed
WhoIAm="GEMSHOME.bin.delegate"
Executable='delegate'
########  End of values to change

import importlib.util, os, sys, getopt

USAGE="""
USAGE:

    This script takes in a JSON object and returns a JSON object.  
    The object can be specified as a filename or piped from standard input.

    Examples:

        - Using a pipe from standard input:
""" + \
f"\n" \
f"              echo <json string> | {Executable} \n"  \
f"              cat /path/to/file | {Executable} \n"  \
f"\n" \
f"        - Using a filename (with path as appropriate): \n" \
f"\n" \
f"              {Executable} /path/to/file \n" \
"""
    TROUBLESHOOTING: 

    If your usage is correct but you are still having trouble, the most
    likely issue is that the script cannot find gemsModules.

    Check that:

        - GEMSHOME is set to the correct path
        - GEMSHOME is in your PYTHONPATH
        - This script is located in GEMSHOME/bin

    If you still cannot get it to work, submit a ticket at:

        https://github.com/GLYCAM-Web/gems/issues
\n"""



Emergency_Response="{\n\
    \"entity\" :\n\
    {\n\
        \"type\": \"" + WhoIAm + "\",\n\
        \"responses\" :\n\
        [\n\
            { \"fatalError\" :\n\
                { \n\
                                    \"respondingService\" : \"Emergency\",\n\
                                    \"notice\" : \n\
                                    {\n\
                                        \"type\" : \"Exit\",\n\
                                        \"code\" : \" 132 \",\n\
                                        \"brief\" : \"UnknownError\",\n\
                                        \"message\" : \"Unable to initialize the " + WhoIAm + " script. \"\n\
                                    }\n\
                                }\n\
            }\n\
            { \"usage\" :\n\
                { \n\
                                    \"respondingService\" : \"" + Executable + "\",\n\
                                    \"notice\" : \n\
                                    {\n\
                                        \"type\" : \"Exit\",\n\
                                        \"code\" : \" 132 \",\n\
                                        \"brief\" : \"UsageStatement\",\n\
                                        \"message\" : \"" + USAGE + "\"\n\
                                    }\n\
                                }\n\
            }\n\
        ]\n\
    }\n\
}"


##  Allow command line users to get a help statement 
if len(sys.argv) > 1:
    if sys.argv[1] in ( "-h", "-help", "help", "--help", "HELP") :
        sys.stderr.write(USAGE)
        sys.exit(1)

##  Ensure that the JSON-CLI utilities in gemsModules can be loaded
try :
    from gemsModules.systemoperations.command_line_utils import JSON_From_Command_Line
except :
    GemsHome = os.environ.get('GEMSHOME')
    if GemsHome is None : 
        sys.stdout.write(Emergency_Response)
        sys.exit(129)
    else : 
        sys.path.append(GemsHome) 
        if importlib.util.find_spec("gemsModules") is None:
            sys.stdout.write(Emergency_Response)
            sys.exit(129)
        else :
            from gemsModules.systemoperations.command_line_utils import JSON_From_Command_Line
#finally :
#    sys.stdout.write(Emergency_Response)
#    sys.exit(129)


##  Get the JSON from the command line
jsonObjectResponse, return_code = JSON_From_Command_Line(sys.argv)

if return_code != 0 :
    sys.stdout.write(jsonObjectResponse)
    sys.exit(129)
else:
    jsonObjectString = jsonObjectResponse


################################################################################
##
##                       End of Preamble
##
##  Everything after this should be specific to your script.
##
################################################################################


from gemsModules.delegator.receive import delegate
responseObjectString=delegate(jsonObjectString)
sys.stdout.write(responseObjectString)


