digraph {
    node [shape=box];

    label="Single-entity, multiple-service workflow overview.";

    Receiver [label="Receiver\nInstantiates Transaction\nwith incoming JSON"];
   
    subgraph cluster_request {
        rankdir=LR;
        label="Request management:\nEnsures that the list of Service objects is complete.\nWorks on the Transaction.  Changes only the outputs.";
        Request_Manager [label="Request Manager"];
        Data_Populator [label="2. Data Populator\nEnsures that each Service object\nhas all the data it needs"];
        Service_Organizer [label="1. Service Organizer\nEnsures that all Service objects\nare present in the right order."];

        {
        rank=same;
        Request_Manager Service_Organizer Data_Populator;
        }
    
    }

    Main_Servicer [label="Main Servicer for all Services\nRuns each service in turn"];
    Service_Manager [label="Service Manager\nTranslates to and from\nneeds of the Service's\n business logic"];
    Service_Logic [label="Service Logic\nData IO for the\nService's business logic"];
    
    Receiver -> Request_Manager [label="Transaction object  "];
    Request_Manager -> Receiver [label="Outgoing JSON string  " constraint=False];
    
    Request_Manager -> Main_Servicer [label="Services object  "];
    Main_Servicer -> Request_Manager [label="Responses object  " constraint=False];
    
    Main_Servicer -> Service_Manager [label="Service object  "];
    Service_Manager -> Main_Servicer [label="Response object  " constraint=False];
    
    Service_Manager -> Service_Logic [label="JSON-agnostic inputs  "];
    Service_Logic -> Service_Manager [label="JSON-agnostic outputs  " constraint=False];
    
 
}
