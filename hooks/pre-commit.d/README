==============
Purpose
==============

These are simple hooks used to see if you've forgotten something, to make sure tests run properly, and to ensure that the expected results are being returned. 
	-If all the conditions are fulfilled, it allows the user to commit. Else, it will indicate where and what errors popped up when it ran the code.

==============
How it works
==============

	1. After a commit is made, the pre-commit file will access the pre-commit.d
	   	directory and runs all scripts with the pre-fix "pre-commit."

	2. It will then run each script in alphabetical order in your terminal 
		(Note: it will only execute the scripts that do not take a long time to
		run in order to not waste the user's time. For the long ones, it will 
		just tell you of any bugs found)
	
	3. If it does not stumble onto any major bugs,  it will say "SUCCESSFUL" which 
		indicates that this script will be committed as long as all other
		scripts that have a hook also are successful.

===============
How to use it
===============

	1. Simply type "git commit" ("git commit -m [your message]" for faster commits) when your located inside the root of your branch.
	
	2. If its successful, you could then "git push" to the remote repository.
